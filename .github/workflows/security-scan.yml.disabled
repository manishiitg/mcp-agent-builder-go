name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily to catch any missed secrets
    - cron: '0 2 * * *'

jobs:
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Fetch full history for comprehensive scanning
        fetch-depth: 0
    
    - name: Run Gitleaks Secret Scan
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # Use our custom configuration
        config-path: .gitleaks.toml
        # Fail the build if secrets are found
        fail: true
        # Show verbose output
        verbose: true
        # Redact secrets in output
        redact: true
        # Report format
        format: sarif
        # Output file
        report-path: gitleaks-report.sarif
    
    - name: Upload Secret Scan Results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: gitleaks-report.sarif
    
    - name: Comment PR with scan results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          try {
            const report = JSON.parse(fs.readFileSync('gitleaks-report.sarif', 'utf8'));
            const findings = report.runs[0].results.length;
            
            if (findings > 0) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `ðŸš¨ **Secret Scan Alert**: ${findings} potential secrets detected in this PR. Please review and remove any sensitive information before merging.`
              });
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `âœ… **Secret Scan Passed**: No secrets detected in this PR.`
              });
            }
          } catch (error) {
            console.log('No SARIF report found or error reading report');
          }

services:
  # MCP Agent Server
  mcp-agent:
    build:
      context: ./agent_go
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./agent_go/configs:/app/configs:ro
      - ./agent_go/reports:/app/reports
      - ./agent_go/logs:/app/logs:rw
      - ./agent_go/chat_history.db:/app/chat_history.db:rw  # SQLite database for chat history and workflows
      - ./agent_go/cache:/app/cache:rw  # MCP server cache for cache-only mode
    env_file:
      - ./agent_go/.env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      # Server Configuration (matching run_server_with_logging.sh)
      - LOG_LEVEL=debug
      - LOG_FILE=/app/logs/server_debug.log
      - TRACING_PROVIDER=console
      - LANGFUSE_DEBUG=true
      - OBSERVABILITY_DEBUG=true
      - OBSERVABILITY_ENABLED=true
      
      # Agent Configuration (matching run_server_with_logging.sh)
      - ORCHESTRATOR_AGENT_MODE=simple
      - TOOL_EXECUTION_TIMEOUT=2m
      - AGENT_PROVIDER=openrouter
      - AGENT_MODEL=x-ai/grok-code-fast-1
      
      # Main LLM Configuration (matching run_server_with_logging.sh)
      - ORCHESTRATOR_MAIN_LLM_PROVIDER=openrouter
      - ORCHESTRATOR_MAIN_LLM_MODEL=x-ai/grok-code-fast-1
      - ORCHESTRATOR_MAIN_LLM_TEMPERATURE=0.2
      - ORCHESTRATOR_MAIN_LLM_MAX_TOKENS=40000
      
      # Override primary provider to use OpenRouter instead of Bedrock
      - ORCHESTRATOR_PROVIDER=openrouter
      - ORCHESTRATOR_MODEL=x-ai/grok-code-fast-1
      
      # OpenRouter Fallback Configuration (matching run_server_with_logging.sh)
      - OPENROUTER_FALLBACK_MODELS=x-ai/grok-code-fast-1,openai/gpt-5-mini
      - OPENROUTER_CROSS_FALLBACK_PROVIDER=openai
      - OPENROUTER_CROSS_FALLBACK_MODELS=gpt-5.1-mini
      
      # Structured Output LLM Configuration (matching run_server_with_logging.sh)
      - ORCHESTRATOR_STRUCTURED_OUTPUT_PROVIDER=openrouter
      - ORCHESTRATOR_STRUCTURED_OUTPUT_MODEL=x-ai/grok-code-fast-1
      - ORCHESTRATOR_STRUCTURED_OUTPUT_TEMPERATURE=0.06
      
      # External Service URLs (internal Docker network)
      - MEMORY_API_URL=http://memory-api:8000
      - PLANNER_API_URL=http://planner-api:8080
      - DOCKER_CONTAINER=true
      - MEMORY_API_INTERNAL_URL=http://memory-api:8000
    depends_on:
      planner-api:
        condition: service_healthy
    restart: unless-stopped

# golangci-lint configuration for agent_go
# See https://golangci-lint.run/usage/configuration/ for full options

version: 2

run:
  # Timeout for analysis
  timeout: 5m
  
  # Which dirs to skip: they won't be analyzed at all
  skip-dirs:
    - cache
    - bin
    - tool_output_folder
    - vendor
    - schema-gen
    - cmd/timeout/timeout-bin
  
  # Which files to skip
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_generated\\.go$"
    - "schema-gen$"
  
  # Set build tags
  build-tags:
    - integration

# Output configuration
output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate|html|junit-xml|github-actions
  format: colored-line-number
  # Print linter name in issue line
  print-issued-lines: true
  # Print linter name in unused line
  print-linter-name: true
  # Make output more machine-readable
  uniq-by-line: true
  # Sort results by: severity|filepath|linter
  sort-results: false

# Linters configuration
linters:
  # Use fast preset as base, then customize
  # Fast preset includes: gofmt, goimports, govet, staticcheck, unused, gosimple, structcheck, varcheck, ineffassign, deadcode, typecheck
  fast: true
  
  # Disable specific linters that are too strict or not needed
  disable:
    - errcheck          # Too strict - requires checking all errors explicitly
    - gochecknoinits    # Allow init functions
    - gochecknoglobals  # Allow global variables
    - wrapcheck         # Error wrapping - can be noisy
    - exhaustruct       # Optional struct fields
    - forcetypeassert   # Sometimes type assertions are necessary
    - gocognit          # Cognitive complexity (can enable if needed)
    - gocyclo           # Cyclomatic complexity (can enable if needed)
    - godot             # Comment formatting too strict
    - ireturn           # Interface returns (too strict)
    - noctx             # Context passing (can be noisy)
    - testpackage       # Allow test files in same package
    - thelper           # Test helper detection (too strict)
    # Style linters - disabled for now to focus on critical issues
    - revive            # Too many style issues (485) - can enable later
    - funlen            # Function length (133) - can relax later
    - dupl              # Duplicate code (35) - less critical
    - gocritic          # Style checks (44) - can enable later
    - goconst           # Magic numbers (29) - low priority
    - whitespace        # Formatting (31) - low priority
    - unconvert         # Unnecessary conversions (9) - low priority
    - unparam           # Unused parameters (8) - low priority
  
  # Enable only critical/important linters
  enable:
    - gosec             # Security linting - CRITICAL (163 issues)
    - misspell          # Spelling checker - easy fixes (1 issue)
    - errname           # Error naming conventions
    - errorlint         # Error wrapping lint - important (98 issues)

linters-settings:
  # govet settings - disable printf check to allow %w in fmt.Sprintf/log.Fatalf
  # Note: %w is only officially supported in fmt.Errorf, but %v works fine for logging
  govet:
    disable:
      - printf
  
  # goimports settings
  goimports:
    local-prefixes: mcp-agent/agent_go
  
  # gocritic settings
  gocritic:
    enabled-tags:
      - diagnostic
      - performance
      - style
    disabled-checks:
      - dupImport      # Can be useful sometimes
      - ifElseChain    # Sometimes clearer
      - captLocal      # Allow local captialization
  
  # gosec security linter
  gosec:
    # Severity level: error, warn, info
    severity: medium
    # Confidence level: low, medium, high
    confidence: medium
    # Note: Lower-priority checks excluded via issues.exclude-rules below
  
  # revive settings
  revive:
    severity: warning
    confidence: 0.8
  
  # staticcheck settings
  staticcheck:
    checks: ["all"]
  
  # misspell settings
  misspell:
    locale: US
  
  # goconst settings
  goconst:
    min-len: 3
    min-occurrences: 3
  
  # funlen settings (function length)
  funlen:
    lines: 100
    statements: 50
  
  # whitespace settings
  whitespace:
    multi-if: false
    multi-func: false
  
  # dupl settings (duplicate code detection)
  dupl:
    threshold: 100

# Issues configuration
issues:
  # Maximum issues count per one linter. Set to 0 to disable.
  max-issues-per-linter: 0
  
  # Maximum count of issues with the same text. Set to 0 to disable.
  max-same-issues: 0
  
  # Show only new issues created after git revision.
  new: false
  
  # Fix found issues (if it's supported by the linter)
  fix: false
  
  # Exclude following linters from requiring explanations
  exclude-rules:
    # Relaxed rules for test files
    - path: _test\.go
      linters:
        - errcheck
        - dupl
        - goconst
        - funlen
        - gocognit
    
    # Allow unused parameters in test files
    - path: _test\.go
      text: "parameter.*should have a comment"
      linters:
        - revive
    
    # Allow long lines in test files
    - path: _test\.go
      linters:
        - lll
    
    # Exclude lower-priority gosec checks (focus on critical security issues)
    # Only critical issues remain: G201/G202 (SQL injection), G204 (command injection), G304 (path traversal), G101 (hardcoded credentials)
    # Note: G101 is kept enabled to catch real hardcoded credentials (false positives handled with nolint)
    - linters:
        - gosec
      text: "G104: Errors unhandled"
    - linters:
        - gosec
      text: "G301: Expect directory permissions"
    - linters:
        - gosec
      text: "G306: Expect WriteFile permissions"
    - linters:
        - gosec
      text: "G107: Potential HTTP request"
    - linters:
        - gosec
      text: "G114: Use of net/http serve"
    - linters:
        - gosec
      text: "G115: integer overflow"
    - linters:
        - gosec
      text: "G302: Expect file permissions"
    

# Severity configuration (optional - commented out for simpler config)
# severity:
#   default-severity: error
#   case-sensitive: false
#   rules:
#     - linters:
#         - gosec
#       severity: error
#     - linters:
#         - misspell
#         - dupl
#       severity: warning
